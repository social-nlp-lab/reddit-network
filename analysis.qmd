---
title: "Analysis"
format: html
editor: visual
knitr:
  opts_chunk: 
    collapse: true
---

## Exploratory Analysis

```{r}
#| echo: false
#| message: false
source("./R/make-dat.R")
library(igraph)
```

```{r}
library(skimr)

posts |>
  group_by(subreddit) |>
  skim()
```

Post score by subreddit

```{r}
posts <- posts |>
  filter(text != '[removed')

ggplot(posts, aes(x = as.factor(subreddit), y = score)) +
  geom_boxplot(fill = "slateblue", alpha = .2) +
  xlab("Subreddit")

```

The post frequency by author by subreddit

```{r}
posts |>
  arrange(desc(score)) |>
  # filter for just the top 500 posts by score
  slice(1:500) |>
  group_by(author) |>
  summarise(val = n()) |>
  # filter for authors who have posted more than twice
  filter(val > 1) |>
  mutate(author = fct_reorder(author, desc(val))) |>
  ggplot(aes(x = author, y = val)) +
  geom_bar(fill="#f68060", alpha=.6, stat = "identity") +
  theme(axis.text.x = element_text(
    angle = 90
  ))
```

```{r}
# influencers

influencers <- posts |>
  filter(text != '[removed]') |>
  # filter for just the top 500 posts by score
  arrange(desc(score)) |>
  slice(1:500) |>
  group_by(author) |>
  summarise(val = n()) |>
  filter(val > 2) |>
  arrange(desc(val))

```

12 users have made more than 2 posts that have received the highest engagement

## Get Data

***Where else do these users post?***

```{r, warning=FALSE}
# first map the userid to username

influencers <- influencers |>
  left_join(users[c("id", "name")], by = c("author" = "id")) |>
  distinct()
```

```{r, eval=FALSE}
library(RedditExtractoR)

get_user_info <- function(userid){
  out <- tryCatch(
    {
      user_ls <- get_user_content(userid)
      ncomments <- nrow(user_ls[[1]]$comments)
      nposts <- nrow(user_ls[[1]]$threads)
      subreddits <- c(user_ls[[1]]$comments$subreddit, user_ls[[1]]$threads$subreddit) |> 
        unique()
      
      # join in df
      tibble(user_id = userid, n_comments = ncomments, n_posts = nposts, subs = subreddits)
    },
    error = function(cond){
      message(paste0("username returned an error:", userid))
    }
  )
  return(out)
}
  
```

```{r}
# networks <- influencers$name |>
#   map(get_user_info) |>
#   bind_rows()
```

```{r}
# write_rds(networks, "./data/influencer_subreddits.rds")
```

```{r}
networks <- read_rds("./data/influencer_subreddits.rds")
```

## Networks

Make list of unique subreddits to use in network graph

```{r}
user_subs <- networks[c("user_id", "subs")]

library(igraph)
library(ggraph)


# create graph object
sub_net <- igraph::graph_from_data_frame(user_subs, directed = FALSE)
V(sub_net)$user <- ifelse(
  V(sub_net)$name %in% influencers$name, 1, 0
)

set.seed(2023)

ggraph(sub_net, layout = "fr") +
  geom_edge_link(color = "grey", alpha = 0.7) +
  geom_node_point(aes(color = as.factor(user))) +
  theme_void() +
  labs(title = "Drug Influencer Subreddit Network")
  
```

try interactive graph

```{r}
#| fig-height: 18

library(networkD3)

networkD3::simpleNetwork(user_subs, zoom = TRUE)
```

```{r}
# centrality measures

igraph::degree(sub_net) |>
  bind_rows() |>
  pivot_longer(cols = everything(), names_to = "account", values_to = "degree") |>
  arrange(desc(degree))
```
